package dart.menus;

import IGNORE.DartStore;
import dart.UserInputHandler;
import dart.data.CustomersController;
import dart.data.GamesController;
import dart.data.items.Game;
import dart.data.users.Customer;

/*
    This class handles every option in the Employee Menu and then redirects the user to sub-menu's or back to Main Menu
 */

public class MenuEmployee {

    private DartStore mainMenu;
    private GamesController gamesController;

    //  This handles the employee menu contents:


    private static void menuRegisterAGame() {

        System.out.print("Please enter title of a game: ");
        String title = UserInputHandler.inputString();
        System.out.print("Please enter genre of a game: ");
        String genre = UserInputHandler.inputString();
        System.out.print("Please enter daily rent of a game: ");
        double dailyRent = UserInputHandler.inputDouble();
        Game game = new Game(title, genre, dailyRent);

        System.out.print("Rent status: " + rentStatus);
        System.out.println("\nYou created a new game. Game ID " + id + "!" );
        Game game = new Game(gameLastNumber++);//creating new game, next id +1
        gameLibrary.addGame(game);// method that allow to add games to library
        System.out.println(
                gameLastNumber - 1 + " : " + game.getTitle() + " (" + game.getGenre() + "). " + game.getDailyRent() + "$. Status: " + game.getRentStatus() + "\n");

    }

    private static void menuRemoveAGame() {
        System.out.print("Please enter a number of the game you want to remove: ");
        int id = UserInputHandler.inputInt();
        gameLibrary.removeGame(id);
    }

    public void menuNewCustomer() {
        CustomersController customersController = new CustomersController();

        System.out.print("Creating a Customer. Please type the customerâ€™s:\nName: ");
        String name = UserInputHandler.inputString();

        Customer customer = new Customer(name, "regular");
        customer.setName(name);

        customersController.registerCustomer();
        System.out.println(customerList);
    }

    public void menuRemoveCustomer() {
        CustomersController customersController = new CustomersController();

        customersController.getCustomers();

        System.out.println("Which customer should be removed? ID:");
        int ID = UserInputHandler.inputInt();

        for (int i = 0; i < customersController.getSize(); i++) {

            int a = (customersController.get(i)).getId();

            if (a == ID) {

                customersController.removeCustomer(i);
                System.out.println(customersController);
            } else {
                System.out.println("Customer's ID not found");
            }
        }
    }
}
